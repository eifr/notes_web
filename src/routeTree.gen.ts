/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as WorkspaceIdIndexRouteImport } from './routes/$workspaceId/index'
import { Route as WorkspaceIdNotesNoteIdRouteImport } from './routes/$workspaceId/notes.$noteId'
import { Route as WorkspaceIdNotebookNotebookIdRouteImport } from './routes/$workspaceId/notebook.$notebookId'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const WorkspaceIdIndexRoute = WorkspaceIdIndexRouteImport.update({
  id: '/$workspaceId/',
  path: '/$workspaceId/',
  getParentRoute: () => rootRouteImport,
} as any)
const WorkspaceIdNotesNoteIdRoute = WorkspaceIdNotesNoteIdRouteImport.update({
  id: '/$workspaceId/notes/$noteId',
  path: '/$workspaceId/notes/$noteId',
  getParentRoute: () => rootRouteImport,
} as any)
const WorkspaceIdNotebookNotebookIdRoute =
  WorkspaceIdNotebookNotebookIdRouteImport.update({
    id: '/$workspaceId/notebook/$notebookId',
    path: '/$workspaceId/notebook/$notebookId',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$workspaceId': typeof WorkspaceIdIndexRoute
  '/$workspaceId/notebook/$notebookId': typeof WorkspaceIdNotebookNotebookIdRoute
  '/$workspaceId/notes/$noteId': typeof WorkspaceIdNotesNoteIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$workspaceId': typeof WorkspaceIdIndexRoute
  '/$workspaceId/notebook/$notebookId': typeof WorkspaceIdNotebookNotebookIdRoute
  '/$workspaceId/notes/$noteId': typeof WorkspaceIdNotesNoteIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$workspaceId/': typeof WorkspaceIdIndexRoute
  '/$workspaceId/notebook/$notebookId': typeof WorkspaceIdNotebookNotebookIdRoute
  '/$workspaceId/notes/$noteId': typeof WorkspaceIdNotesNoteIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$workspaceId'
    | '/$workspaceId/notebook/$notebookId'
    | '/$workspaceId/notes/$noteId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$workspaceId'
    | '/$workspaceId/notebook/$notebookId'
    | '/$workspaceId/notes/$noteId'
  id:
    | '__root__'
    | '/'
    | '/$workspaceId/'
    | '/$workspaceId/notebook/$notebookId'
    | '/$workspaceId/notes/$noteId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  WorkspaceIdIndexRoute: typeof WorkspaceIdIndexRoute
  WorkspaceIdNotebookNotebookIdRoute: typeof WorkspaceIdNotebookNotebookIdRoute
  WorkspaceIdNotesNoteIdRoute: typeof WorkspaceIdNotesNoteIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$workspaceId/': {
      id: '/$workspaceId/'
      path: '/$workspaceId'
      fullPath: '/$workspaceId'
      preLoaderRoute: typeof WorkspaceIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$workspaceId/notes/$noteId': {
      id: '/$workspaceId/notes/$noteId'
      path: '/$workspaceId/notes/$noteId'
      fullPath: '/$workspaceId/notes/$noteId'
      preLoaderRoute: typeof WorkspaceIdNotesNoteIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$workspaceId/notebook/$notebookId': {
      id: '/$workspaceId/notebook/$notebookId'
      path: '/$workspaceId/notebook/$notebookId'
      fullPath: '/$workspaceId/notebook/$notebookId'
      preLoaderRoute: typeof WorkspaceIdNotebookNotebookIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  WorkspaceIdIndexRoute: WorkspaceIdIndexRoute,
  WorkspaceIdNotebookNotebookIdRoute: WorkspaceIdNotebookNotebookIdRoute,
  WorkspaceIdNotesNoteIdRoute: WorkspaceIdNotesNoteIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
